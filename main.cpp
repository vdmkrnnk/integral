//
//  main.cpp
//  Integral
//
//  Created by Вадим Зитнер on 17/09/2019.
//  Copyright © 2019 Вадим. All rights reserved.
//

#include <iostream>
#include <cmath>
#include <cstdlib>

using namespace std;

long double fact(int k)
{
    if (k < 0) // если пользователь ввел отрицательное число
        return 0; // возвращаем ноль
    if (k == 0) // если пользователь ввел ноль,
        return 1; // возвращаем факториал от нуля - не удивляйся, но это 1 =)
    else // Во всех остальных случаях
        return k * fact(k - 1); // делаем рекурсию.
}

long double intgr(double x) {
    double S = 0; // инициализируем сумматор
    double Sn = 0; // инициализируем переменную куда будет сохранятся значение предыдущего сумматора
    int k = 0; // инициализируем индекс сумматора
    double eps = 0.001; // инициализируем точность вычисления
    
    // выполняем цикл с постусловием
    do {
        Sn = S; // сохраняем значение предыдущего сумматора
        S += (pow(-1, k) * pow(x, 2 * k + 1))/((2 * k + 1) * fact(k)); // вычисляем сумму степенного ряда
        k++;
    }
    while (fabs(fabs(S) - fabs(Sn)) > eps); // повторяем пока вычисление не будет удовлетворять точности
        
    cout << "Количество повторений: " << k + 1 << endl ;
    cout << "Площадь подынтегральной фигуры равна приблизительно: " << fabs(S) << endl;
    
    return fabs(S); // возвращаем значение интеграла
}

int main() {
    double x = -2.5; // нижний предел интегрирования
    intgr(x);
    
    return 0;
}
